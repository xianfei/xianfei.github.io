[{"content":" 2021 年 9 月，作为大四的最后一次小组开发课程，我们设计了一个有趣的社交软件——奶黄猫。我在小组中担任产品设计、前端/客户端开发的职位。\n演示视频 视频使用AV1格式编码，请使用 Chrome 70+ / Firefox 67+ / Edge 79+ 浏览器进行播放。See more on here.\n设计想法 在设计这个该社交软件时，由于我们小组都是来自同一个班学同一个专业的程序员，于是我就想到了一个很有意思的想法——将类似于小程序的应用嵌入到动态区域内，来增强可交互性和趣味性。目前的社交软件往往支持在动态除了文字外添加照片、视频、文章超链接等，而我们认为动态的区域应该让用户自由发挥，所以我们设计了可编程动态，支持具有GUI的Web程序和面向入门程序员的CLI程序。\n试想一下，刚上大学的你，学会了C语言，写下属于自己人生中的第一个程序时，那迫不及待想让亲朋好友体验的心情。而这个软件恰好能满足他们！\n待更新 Blog Article 预计添加交互、核心代码等\n接口文档 版本：2021-11-02 ver0.9 by xianfei\n备注 time使用的为Unix时间戳，new Date().getTime()\n动态相关部分 获取动态\nHTTP请求方式：POST\nURL： /moment/getMoments\nPOST Form：\n参数 说明 userID 用户唯一标识符 type 0为广场 1为关注 lastMomentID 上次获取最后一条动态的ID，第一次获取为-1 length 本次获取的动态数 预期返回类型：Json Object\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\n​\t[{\n​\t\u0026ldquo;momentID\u0026rdquo;:当前动态ID,\n​\t\u0026ldquo;userID\u0026rdquo;:用户ID，字符串,\n​\t\u0026ldquo;userName\u0026rdquo;:用户昵称，字符串,\n​\t\u0026ldquo;userAvatar\u0026rdquo;:用户头像，应为图片URL，字符串,\n​\t\u0026ldquo;time\u0026rdquo;:此动态产生时间戳 整型,\n​\t\u0026ldquo;text\u0026rdquo;:动态文字内容,\n​\t\u0026ldquo;appendixType\u0026rdquo;:0无 1图片 2视频 3GUI程序代码段 4CLI程序代码段,\n​\t\u0026ldquo;photos\u0026rdquo;:仅appendixType为1时读取该属性 为含一个或多个图片URL的数组 ,\n​\t\u0026ldquo;video\u0026rdquo;:仅appendixType为2时读取该属性 此项为视频URL ,\n​\t\u0026ldquo;appID\u0026rdquo;:仅appendixType为3/4时读取该属性,\n​\t\u0026ldquo;likedNum\u0026rdquo;:点赞数 整型,\n​\t\u0026ldquo;commentNum\u0026rdquo;:评论数 整型,\n​\t\u0026ldquo;isLiked\u0026rdquo;:当前用户是否点赞了当前动态，Boolean,\n​\t\u0026ldquo;isDel\u0026rdquo;:该动态是否已被删除，Boolean,\n​\t\u0026ldquo;tag\u0026rdquo;:动态标签\n},{\n​\t//同上\n}]\n}\n获取单个动态\nHTTP请求方式：POST\nURL： /moment/getMomentByID\nPOST Form：\n参数 说明 userID 用户唯一标识符 momentID 动态的ID 预期返回类型：Json Object\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\n{\n​\t\u0026ldquo;momentID\u0026rdquo;:当前动态ID,\n​\t\u0026ldquo;userID\u0026rdquo;:用户ID，字符串,\n​\t\u0026ldquo;userName\u0026rdquo;:用户昵称，字符串,\n​\t\u0026ldquo;userAvatar\u0026rdquo;:用户头像，应为图片URL，字符串,\n​\t\u0026ldquo;time\u0026rdquo;:此动态产生时间戳 整型,\n​\t\u0026ldquo;text\u0026rdquo;:动态文字内容,\n​\t\u0026ldquo;appendixType\u0026rdquo;:0无 1图片 2视频 3GUI程序代码段 4CLI程序代码段,\n​\t\u0026ldquo;photos\u0026rdquo;:仅appendixType为1时读取该属性 为含一个或多个图片URL的数组 ,\n​\t\u0026ldquo;video\u0026rdquo;:仅appendixType为2时读取该属性 此项为视频URL ,\n​\t\u0026ldquo;appID\u0026rdquo;:仅appendixType为3/4时读取该属性,\n​\t\u0026ldquo;likedNum\u0026rdquo;:点赞数 整型,\n​\t\u0026ldquo;commentNum\u0026rdquo;:评论数 整型,\n​\t\u0026ldquo;isLiked\u0026rdquo;:当前用户是否点赞了当前动态，Boolean,\n​\t\u0026ldquo;isDel\u0026rdquo;:该动态是否已被删除，Boolean,\n​\t\u0026ldquo;tag\u0026rdquo;:动态标签\n}\n}\n点赞/取消动态（对于已点赞再次点赞为取消）\nHTTP请求方式：POST\nURL： /moment/likeMoment\nPOST Form：\n参数 说明 userID 用户唯一标识符 momentID 点赞的动态 预期返回类型：Json Object\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:{\n​\t\u0026ldquo;isLiked\u0026rdquo;:当前用户是否点赞了当前动态，Boolean,\n​\t\u0026ldquo;likedNum\u0026rdquo;:该动态点赞数\n​\t}\n}\n发送评论\nHTTP请求方式：POST\nURL： /moment/commentMoment\nPOST Form：\n参数 说明 userID 用户唯一标识符 momentID 评论的动态 commentText 评论内容 预期返回类型：Json Object\n{\u0026ldquo;status\u0026rdquo;:0,\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;}\n获取评论\nHTTP请求方式：POST\nURL： /moment/getComment\nPOST Form：\n参数 说明 userID 用户唯一标识符 momentID 动态ID 预期返回类型：Json Array\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:[{\n​\t\u0026ldquo;commentID\u0026rdquo;:评论ID，字符串,\n​\t\u0026ldquo;userID\u0026rdquo;:用户ID，字符串,\n​\t\u0026ldquo;userName\u0026rdquo;:用户昵称，字符串,\n​\t\u0026ldquo;userAvatar\u0026rdquo;:用户头像，应为图片URL，字符串,\n​\t\u0026ldquo;time\u0026rdquo;:此评论产生时间戳 整型,\n​\t\u0026ldquo;text\u0026rdquo;:内容,\n​\t\u0026ldquo;likedNum\u0026rdquo;:点赞数,\n},{\n// 同上\n}]\n}\n获取点赞用户列表\nHTTP请求方式：POST\nURL： /moment/getLikedMomentUsers\nPOST Form：\n参数 说明 userID 用户唯一标识符 momentID 动态ID 预期返回类型：Json Array\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:[{\n​\t\u0026ldquo;userID\u0026rdquo;:用户ID，字符串,\n​\t\u0026ldquo;userName\u0026rdquo;:用户昵称，字符串,\n​\t\u0026ldquo;userAvatar\u0026rdquo;:用户头像，应为图片URL，字符串,\n},{\n// 同上\n}]\n}\n发表纯文本动态\nHTTP请求方式：POST\nURL： /moment/createMomentOnlyText\nPOST Form：\n参数 说明 userID 用户唯一标识符 text 文本内容 tag 标签 预期返回类型：Json Object\n{\u0026ldquo;status\u0026rdquo;:0,\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;}\n发表含图片文本动态\nHTTP请求方式：POST\nURL： /moment/createMomentWithPhotos\nPOST Form：\n参数 说明 userID 用户唯一标识符 text 文本内容 tag 标签 photos 多张图片文件* *参考 https://blog.csdn.net/qq_38310446/article/details/87623991\n预期返回类型：Json Object\n{\u0026ldquo;status\u0026rdquo;:0,\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;}\n发表含视频文本动态\nHTTP请求方式：POST\nURL： /moment/createMomentWithVideo\nPOST Form：\n参数 说明 userID 用户唯一标识符 text 文本内容 tag 标签 video 视频文件 预期返回类型：Json Object\n{\u0026ldquo;status\u0026rdquo;:0,\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;}\n删除评论\nHTTP请求方式：POST\nHTTP请求方式：POST\nURL： /moment/delComment\nPOST Form：\n参数 说明 userID 用户唯一标识符 commentID 点赞的评论 预期返回类型：Json Object\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;\n}\n删除动态\nHTTP请求方式：POST\nURL： /moment/delMoment\nPOST Form：\n参数 说明 userID 用户唯一标识符 momentID 动态ID 预期返回类型：Json Object\n{\u0026ldquo;status\u0026rdquo;:0,\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;}\n获取某用户动态\nHTTP请求方式：POST\nURL： /moment/getUsersMoments\nPOST Form：\n参数 说明 userID 用户唯一标识符 targetUserID 需要获取对方动态的ID lastMomentID 上次获取最后一条动态的ID length 本次获取的动态数 预期返回类型：Json Object\n返回值同 1 获取动态\n获取某类型动态\nHTTP请求方式：POST\nURL： /moment/getTagMoments\nPOST Form：\n参数 说明 userID 用户唯一标识符 tag 希望获取的动态类型 lastMomentID 上次获取最后一条动态的ID length 本次获取的动态数 预期返回类型：Json Object\n返回值同 1 获取动态\n举报动态\nHTTP请求方式：POST\nURL： /moment/reportMoment\nPOST Form：\n参数 说明 userID 用户唯一标识符 momentID 被举报动态ID message 举报理由 预期返回类型：Json Object\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;\n}\n获取CLI程序段\nHTTP请求方式：POST\nURL： /moment/getAppCLI\nPOST Form：\n参数 说明 appID 代码段唯一标识符 {\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:{\n​\t\u0026ldquo;language\u0026rdquo;:编程语言,\n​\t\u0026ldquo;code\u0026rdquo;:程序代码,\n​\t\u0026ldquo;para\u0026rdquo;:保留段,\n​\t}\n}\n发表含CLI程序段文本动态\nHTTP请求方式：POST\nURL： /moment/createMomentWithAppCLI\nPOST Form：\n参数 说明 userID 用户唯一标识符 text 文本内容 tag 标签 language 编程语言 code 程序代码段 para 保留段 预期返回类型：Json Object\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;\n}\n获取GUI程序段\nHTTP请求方式：POST\nURL： /moment/getAppGUI\nPOST Form：\n参数 说明 appID 代码段唯一标识符 {\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:{\n​\t\u0026ldquo;language\u0026rdquo;:编程语言,\n​\t\u0026ldquo;code\u0026rdquo;:程序代码,\n​\t\u0026ldquo;html\u0026rdquo;:HTML代码,\n​\t\u0026ldquo;css\u0026rdquo;:css代码,\n​\t\u0026ldquo;para\u0026rdquo;:保留段,\n​\t}\n}\n发表含GUI程序段文本动态\nHTTP请求方式：POST\nURL： /moment/createMomentWithAppGUI\nPOST Form：\n参数 说明 userID 用户唯一标识符 text 文本内容 tag 标签 language 编程语言 code 程序代码段 html 代码 css 代码 para 保留段 预期返回类型：Json Object\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;\n}\n用户相关 获取某用户信息\nHTTP请求方式：POST\nURL： /user/getUsersInfo\nPOST Form：\n参数 说明 userID 请求的用户ID targetUserID 对方动态ID 预期返回类型：Json Object 对象数组\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:{\n​\t\u0026ldquo;userID\u0026rdquo;:用户ID，字符串,\n​\t\u0026ldquo;userName\u0026rdquo;:用户昵称，字符串,\n​\t\u0026ldquo;userAvatar\u0026rdquo;:用户头像，应为图片URL，字符串,\n​\t\u0026ldquo;follower\u0026rdquo;:粉丝数,\n​\t\u0026ldquo;following\u0026rdquo;:关注数,\n​\t\u0026ldquo;isMale\u0026rdquo;:性别,\n​\t\u0026ldquo;description\u0026rdquo;:个性签名,\n​\t\u0026ldquo;tag\u0026rdquo;:用户喜好标签,\n​\t\u0026ldquo;relationship\u0026rdquo;:0无 1是粉丝 2已关注 3互相关注 ​\t}\n}\n修改用户信息\nHTTP请求方式：POST\nURL： /user/changeUsersInfo\nPOST Form：\n参数 说明 userID 用户唯一标识符 userName 用户昵称 isMale 性别 description 个性签名 tag 用户喜好标签 预期返回类型：Json Object 对象数组\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;\n}\n登录\nHTTP请求方式：POST\nURL： /user/login\nPOST Form：\n参数 说明 user 用户ID/手机号 password 密码 预期返回类型：Json Object 对象数组\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:{\u0026ldquo;userID\u0026rdquo;:用户唯一标识符}\n}\n修改头像\nHTTP请求方式：POST\nURL： /user/changeAvatar\nPOST Form：\n参数 说明 userID 用户ID img 头像 预期返回类型：Json Object 对象数组\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;\n}\n注册\nHTTP请求方式：POST\nURL： /user/register\nPOST Form：\n参数 说明 userID 手机号 password 密码 userName 用户昵称 isMale 性别 预期返回类型：Json Object 对象数组\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:{\u0026ldquo;userID\u0026rdquo;:用户唯一标识符}\n}\n修改密码\nHTTP请求方式：POST\nURL： /user/changePassword\nPOST Form：\n参数 说明 userID 用户ID passwordOld 原密码 passwordNew 新密码 预期返回类型：Json Object 对象数组\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;\n}\n获取粉丝列表\nHTTP请求方式：POST\nURL： /user/getFans\nPOST Form：\n参数 说明 userID 请求的用户ID targetUserID 对方动态ID 预期返回类型：Json Object 对象数组\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:[{\n​\t\u0026ldquo;userID\u0026rdquo;:用户ID，字符串,\n​\t\u0026ldquo;userName\u0026rdquo;:用户昵称，字符串,\n​\t\u0026ldquo;userAvatar\u0026rdquo;:用户头像，应为图片URL，字符串,\n​\t\u0026ldquo;relationship\u0026rdquo;:0无 1是粉丝 2已关注 3互相关注\n​\t},{同上}]\n}\n获取关注列表\nHTTP请求方式：POST\nURL： /user/getFollowers\nPOST Form：\n参数 说明 userID 请求的用户ID targetUserID 对方的ID 预期返回类型：Json Object 对象数组\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:[{\n​\t\u0026ldquo;userID\u0026rdquo;:用户ID，字符串,\n​\t\u0026ldquo;userName\u0026rdquo;:用户昵称，字符串,\n​\t\u0026ldquo;userAvatar\u0026rdquo;:用户头像，应为图片URL，字符串,\n​\t\u0026ldquo;relationship\u0026rdquo;:0无 1是粉丝 2已关注 3互相关注\n​\t}\n​\t,{同上}]\n}\n举报用户\nHTTP请求方式：POST\nURL： /user/reportUser\nPOST Form：\n参数 说明 userID 用户唯一标识符 targetUserID 被举报用户 message 举报理由 预期返回类型：Json Object\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;\n}\n关注用户\nHTTP请求方式：POST\nURL： /user/followUser\nPOST Form：\n参数 说明 userID 用户唯一标识符 targetUserID 被关注用户id 预期返回类型：Json Object\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;\n}\n搜索用户\nHTTP请求方式：POST\nURL： /user/searchUser\nPOST Form：\n参数 说明 userID 请求的用户ID queryUserName 查询的用户名 预期返回类型：Json Object 对象数组\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:[{\n​\t\u0026ldquo;userID\u0026rdquo;:用户ID，字符串,\n​\t\u0026ldquo;userName\u0026rdquo;:用户昵称，字符串,\n​\t\u0026ldquo;userAvatar\u0026rdquo;:用户头像，应为图片URL，字符串,\n​\t\u0026ldquo;relationship\u0026rdquo;:0无 1是粉丝 2已关注 3互相关注\n​\t}\n​\t,{同上}]\n}\n取消关注用户\nHTTP请求方式：POST\nURL： /user/cancelFollowUser\nPOST Form：\n参数 说明 userID 用户唯一标识符 targetUserID 被关注用户id 预期返回类型：Json Object\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:\u0026quot;\u0026quot;\n}\n通知 获取通知\nHTTP请求方式：POST\nURL： /notice/getNotice\nPOST Form：\n参数 说明 userID 请求的用户ID 预期返回类型：Json Object 对象数组\n{\n​\t\u0026ldquo;status\u0026rdquo;:0,\n​\t\u0026ldquo;message\u0026rdquo;:[{\n​\t\u0026ldquo;type\u0026rdquo;:1新粉丝 2评论 3点赞 4系统公告,\n​\t\u0026ldquo;userID\u0026rdquo;:用户ID，字符串，type为4时不检查此属性,\n​\t\u0026ldquo;userName\u0026rdquo;:用户昵称，字符串，type为4时不检查此属性,\n​\t\u0026ldquo;userAvatar\u0026rdquo;:用户头像，应为图片URL，字符串，type为4时不检查此属性,\n​\t\u0026ldquo;note\u0026rdquo;:信息内容,\n​\t\u0026ldquo;momentID\u0026rdquo;:仅type为2或3时使用此值，其余不检测该属性,\n​\t\u0026ldquo;time\u0026rdquo;:当前通知产生时间\n​\t}\n​\t,{同上}]\n}\n聊天 发送消息\n协议：WebSocket 全双工\nURL：/chat\n数据报类型：JSON\n数据报格式：\n{\n​\t\u0026ldquo;formUserID\u0026rdquo;:发送消息的用户ID,\n​\t\u0026ldquo;toUserID\u0026rdquo;:接收消息的用户ID,\n​\t\u0026ldquo;message\u0026rdquo;:消息体\n}\n","date":"2022-07-10T00:00:00Z","image":"/p/nhm/nhm_hu793537741257f97c3a3dfd999d5ad516_263578_120x120_fill_box_smart1_3.png","permalink":"/p/nhm/","title":"我们设计了一个有趣的社交软件——奶黄猫"},{"content":"Hello World in Hugo Hi! I\u0026rsquo;m xianfei. I\u0026rsquo;m a student in the Department of Computer Science and Software Engineering, Beijing Information Science \u0026amp; Technology University (BISTU).\n","date":"2022-06-29T00:00:00Z","image":"/p/hello-world-in-hugo/banner_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"/p/hello-world-in-hugo/","title":"Hello World in Hugo"},{"content":" 2021 年或许是平平淡淡的一年，又或许是充满挑战的一年。最近几天打算写一写自己的心得吧，或许也算是对去年的总结，又或是对未来的展望。文笔欠佳，见谅。\n首先来写写 2021 年吧，一转眼就大四了，大四的生活主要是在准备考研，考不考得上也不好说，就在今儿看空卡老师的公众号时看到了一调消息，觉得还挺好笑的。\n说道这里还有一个很好笑的：势态研凉\n好了，言归正传，让我来分享2021都经历了什么有趣的事情吧！\n2021.7 秦皇岛之旅——自驾游 2021的那个暑假，偶然提到了Aranya——秦皇岛的一个很文艺的社区，正好大家也想去海边了，以及想到了自驾游，于是我们就想到了这么一个安排！车还是那辆老车——老捷达，但是这个车别看虽然老，真的是好开，当时是晚上去的走的夜路，开了四个多小时吧开到了北戴河~\n这次出去玩我们订的是民宿，可以自己做饭，自己吃火锅。秦皇岛的物价很便宜，我们在那边有一家很喜欢的冰激凌店——碰碰凉，还有一家炸鸡店，可能是在北京生活习惯了，那边的这些东西物价还不到北京的一半儿而且量大！到了民宿，我们先要规划一下后几天的行程，对于我这样一个学软件工程专业的工科生，电脑当然是必不可少的了！我们第一天用电脑规划行程，后几天就是用电脑看电影了！\n我们决定第一天去Aranya，感受一下文艺气息，第二天去北戴河老虎石，第三天上午逛逛就准备回去了。当晚我们到那儿都很饿，于是就到了那附近的一家大排档撸串！你还别说他家的牛肉穿是真的好吃，比在北京吃的很多餐馆的都要好吃~\n吃完已经快凌晨一点了，于是我们决定——夜里看海！就像《藏起来》歌词“有人相爱，有人夜里开车看海”那样，我们把车开到了海边。这个地方白天是个景区，停车要钱，晚上也就没人管了。\n第二天来到Aranya，这真是一个十分文艺的小镇，建立在海边，可能大家所熟知的就是Aranya教堂了吧，这里借用小米同学的星轨。\n总的而言，在秦皇岛的旅途还是很开心的，也是我第一次自驾游。如果你对此感兴趣可以去看一下我的B站上的Vlog（https://www.bilibili.com/video/av504760418）\n2021.8 妙峰山野营 去秦皇岛是第一次自驾游的话，那么去妙峰山是我第一次自驾野营。其中有一个同学他对这方面很有经验，并且自己有帐篷什么的，我们还带了炭火和羊肉串、鱼豆腐、鸡翅等烧烤食材，可以在野外烧烤~\n同样这次活动也拍了vlog~如果感兴趣可以去看一下（https://www.bilibili.com/video/av717669473）\n2021.5 大创 北邮每年的大创展我都很喜欢，也是我每年必去的活动，在这里可以看到许多同学很有意思的想法，和他们交流技术，思维的碰撞之间或许能产生不一样的火花！\n2021.4 舞会 其实我是被叫来当摄影拍拍照的，平时在学校团委、青媒等学生组织当新闻摄影报道学校活动，而这次舞会不是官方活动所以我可以拍拍照顺便参与一下，感谢北邮舞协的朋友们教我如何跳舞！\n兴趣爱好——摄影 最早喜欢摄影是从高中开始，当时其实主要就是为了拍学校的一些活动（当时在学校电视台工作），之后大学也因为之前拍过不错的作品而在军训加入摄影宣传组（文体宣）而不用训练，在2021年也拍了许多自己满意的照片，还是像以前一样以人像摄影及校园活动为主。大家可以访问本站的摄影作品展（https://xianfei.ml:8001/gallery/）来观看哦~\n兴趣爱好——美食制作 俗话说得好，民以食为天，而好吃的食物，能使人在心情不好时感到治愈。其实我甚至向往以后的生活：开一个小饭馆，饭点儿做做菜迎接一些客人，而不是饭点儿的时候接一些外包项目写写代码赚一些小钱。感觉这样生活应该也不会太累也不会太穷。\n编程 我的专业是软件工程，所以编程应该也算是我的本行了，在暑假感谢于崔Sir的安排让我体验了一把打工人的生活，去工作了几天，帮忙完成一个小项目，用C++写一些大项目中涉及到的算法并进行测试，工资是每天一千块钱。这也算第一次去上班挣钱了吧~\n如果研究生没考上的话，之后也就是要去就业了，或者边工作边准备明年再考一年？不过无论到时候是不是在工作，还要保持学习的热情及对新知识的渴望。之前老师经常说，学会以后把所学的给其他人讲出来，会加深你对知识的理解，所以我决定在b站分享一些实用的编程技术。目前在做的是速成全栈工程师，做一个提问箱的系统，目前已经上传完第一集，第二集已经录完正在剪辑了，欢迎大家去看一下以及给个三连关注什么的！（https://www.bilibili.com/video/av808225151）\n人际交往 人际关系是困扰人类的永恒课题，人的烦恼绝大多数都是周围人带来的。人际交往的本质就是“社会认可战”，综合运用精神、物质、情感认可才是获胜的最佳策略。让你我都有良好的感觉，或者说是过得开心才是最重要的，俗话说得好“和气生财”，往往老板聊得来就可能会让你多多光顾一家店。最近看老梁讲的《如何练就令人拍案叫绝的现场反应》，讲的很是好，他还推出过情商课，这些在YouTube上能看到。我在本站搬运了一份，《如何练就令人拍案叫绝的现场反应》，讲的十分好，两个小时，强烈推荐大家能把他看完。（https://xianfei.ml:8001/?p=460，不支持iOS设备）\n2021-2022 元旦跨年 2022的元旦，和同学们到北京城里的胡同（东四那边）玩了玩，最近很喜欢许多奇奇怪怪而又没什么用的好玩的东西，生活嘛，应该充满仪式感。\n2022 2022，希望生活能够更好，希望开开心心，希望世界和平，希望考研上岸。\n年初去打卡了著名的地铁上岸站，正好芽芽同学就住在门头沟，顺便让她当个导游了，也祝她能考研上岸！\n突然想到明年就毕业了，希望疫情能够好转，能有一个更好的毕业旅行吧！如果有什么好的想法，欢迎在评论区留言！\n","date":"2022-01-27T00:00:00Z","image":"/p/my2021/clay-banks-HyczMwZbdLg-unsplash_hub4793d9bcd0c763f6c3c447eae921687_1203292_120x120_fill_q75_box_smart1.jpg","permalink":"/p/my2021/","title":"2021年度总结\u0026杂谈"},{"content":" 【释义】从目前的形势和状态分析，这次考研要凉。\n【例句】如今～，只好准备二战了。\n成语：\n释义： 从目前的形势和状态分析，这次考研要凉。 例句： 如今～，只好准备二战了。 本文是交互式Blog，请尝试改变上方输入框中的文字！\n","date":"2022-01-12T00:00:00Z","image":"/p/%E6%88%90%E8%AF%AD%E7%94%9F%E6%88%90%E5%99%A8/banner_huf1e48fbcfb498bd1e6f5485ca95ebe62_255681_120x120_fill_box_smart1_3.png","permalink":"/p/%E6%88%90%E8%AF%AD%E7%94%9F%E6%88%90%E5%99%A8/","title":"成语生成器"},{"content":"功能介绍 利用TCP/IP协议的局域网文件传输工具，通过ip地址及自定义的端口号进行连接。\n运行环境 通过测试的运行环境：macOS Mojave 10.14 \u0026amp; Fedora Linux Workstation 29\n依赖的软件包：dialog（图形库，需自己安装）、netcat(nc，用于对TCP/UDP进行读写，这两个系统自带)、net-tools（ifconfig，用于配置和显示Linux内核中网络接口，这两个系统自带）\nDialog安装方法：\nmacOS：使用brew包管理器安装。必要时请提供superuser权限。 在终端中输入以下命令\nbrew安装命令：（如果安装过请跳过这一步） /usr/bin/ruby -e \u0026quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\u0026quot;\n使用brew包管理器安装命令： brew install dialog\nfedora: 使用yum包管理器安装。 在终端中输入以下命令\nsudo yum install dialog\n运行截图 源代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 #!/bin/bash send() { dialog --inputbox \u0026#34;请将文件拖到这里，或者输入绝对路径\u0026#34; 20 50 2\u0026gt; temp if [ $? != 0 ] then return 6 fi fileAddr=`cat temp` fileName=`echo ${fileAddr##*/}` dialog --inputbox \u0026#34;请输入您想使用的端口号\u0026#34; 20 50 2\u0026gt; temp if [ $? != 0 ] then return 6 fi sendPort=`cat temp` dialog --inputbox \u0026#34;请输入接收方的ip地址\u0026#34; 20 50 2\u0026gt; temp if [ $? != 0 ] then return 6 fi recvIP=`cat temp` dialog --title 正在发送 --infobox \u0026#34;正在发送文件$fileName \u0026#34; 20 50 echo $fileName | nc $recvIP $sendPort if [ $? != 0 ] then dialog --colors --msgbox \u0026#34;\\Z1 发送错误！请检查端口号及IP地址！\u0026#34; 0 0 return 6 fi sleep 1 nc $recvIP $sendPort \u0026lt; $fileAddr if [ $? != 0 ] then dialog --colors --msgbox \u0026#34;\\Z1 发送错误！\u0026#34; 0 0 return 6 fi fileSize=`ls -lh $fileAddr | awk \u0026#39;{print $5}\u0026#39;` dialog --msgbox \u0026#34;发送完成。\\n文件名：$fileName \\n大小：${fileSize}\u0026#34; 20 50 } recv() { dialog --inputbox \u0026#34;请输入您想使用的端口号\u0026#34; 20 50 2\u0026gt; temp if [ $? != 0 ] then return 6 fi recvPort=`cat temp` dialog --title \u0026#34;请选择接收路径\u0026#34; --fselect \u0026#34;${HOME}/\u0026#34; 8 50 2\u0026gt; temp if [ $? != 0 ] then return 6 fi recvAddr=`cat temp` localIP=`ifconfig | grep \u0026#34;inet\u0026#34; | awk \u0026#39;{ print $2}\u0026#39; | grep -v \u0026#34;127.0.0.1\u0026#34; | grep -v \u0026#34;:\u0026#34;` dialog --title 等待接受 --infobox \u0026#34;本机IP：$localIP \\n端口号：$recvPort\u0026#34; 20 50 nc -l $recvPort \u0026gt; temp if [ $? != 0 ] then dialog --colors --msgbox \u0026#34;\\Z1 接收错误！\u0026#34; 0 0 return 6 fi recvFile=`cat temp` dialog --infobox \u0026#34;正在接收文件 $recvFile ……\u0026#34; 20 50 nc -l $recvPort \u0026gt; filetemp if [ $? != 0 ] then dialog --colors --msgbox \u0026#34;\\Z1 接收错误！\u0026#34; 0 0 return 6 fi mv filetemp ${recvAddr}/${recvFile} fileSize=`ls -lh ${recvAddr}/${recvFile} | awk \u0026#39;{print $5}\u0026#39;` dialog --msgbox \u0026#34;接收完成。\\n文件名：$recvFile \\n大小：${fileSize}\u0026#34; 20 50 } mainUI() { dialog --cancel-label 退出 --title Shell文件传输助手 --menu \u0026#34; \\n \u0026#34; 20 50 8 1 \u0026#34;发送文件\u0026#34; 2 \u0026#34;接收文件\u0026#34; 3 \u0026#34;关于\u0026#34; 4 \u0026#34;退出\u0026#34; 2\u0026gt; temp a1=`cat temp` case $a1 in 1) send if [ $? = 6 ] then mainUI fi ;; 2) recv if [ $? = 6 ] then mainUI fi ;; 3) dialog --colors --msgbox \u0026#34;Shell文件传输助手 \\n\\nBeta Version 2019.3.5\\n\\n\\Z6开发人员：\\n王衔飞 李思涵 胡嘉慧 丁玲\u0026#34; 20 50 mainUI ;; 4) return ;; esac } mainUI clear rm -f temp rm -f filetemp ","date":"2019-03-05T00:00:00Z","image":"/p/shell-file-trans/1_huf95364caf60a3b9d7580a3cfd70ebe86_78402_120x120_fill_q75_h2_box_smart1_2.webp","permalink":"/p/shell-file-trans/","title":"Shell File Transfer —— 适用于Linux/macOS的局域网文件传输程序"},{"content":"前言 一个基于C语言的多平台控制台扫雷软件，可以实现Windows系统自带小游戏扫雷的所有功能。实现了自定义游戏参数、第一次不会踩到雷、挖雷、标记、自动处理无雷区域、一定条件下快速挖开周围区域的功能。控制台版本使用操作命令+行列坐标方式实现。\n流程图 源代码include \u0026lt;stdio.h\u0026gt; #include \u0026lt;string.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; #include \u0026lt;time.h\u0026gt; //设定为挖开和已标记填充的字符 #define undigged \u0026#34;▣\u0026#34; #define marked \u0026#34;∅\u0026#34; //行列数及雷数 unsigned int row = 16; unsigned int col = 30; unsigned int minenum = 9; //随机造雷函数 int makemine(int mine[32][32]) { int a[minenum]; //用于保存雷的位置 int i, j; for (i = 1; i \u0026lt; row + 1; i++) { for (j = 1; j \u0026lt; col + 1; j++) { mine[i][j] = 0;//遍历清空 用于第一次踩到雷重新造雷用 } } srand((int) time(0)); a[0] = rand() % (row * col); for (i = 1; i \u0026lt; minenum; i++) { a[i] = rand() % (row * col); for (j = 0; j \u0026lt; i; j++) { if (a[i] == a[j]) i--; } } for (i = 0; i \u0026lt; minenum; i++) { //将前面产生的雷的位置写入到数组中 int x = a[i] / col + 1; int y = a[i] % col + 1; mine[x][y] = 1; } return 0; } //输出雷盘 int output(char show[31][31][4]) { int i, j; for (i = 1; i \u0026lt; row + 1; i++) { printf(\u0026#34;%3d \u0026#34;, i); for (j = 1; j \u0026lt; col + 1; j++) { printf(\u0026#34;%s \u0026#34;, show[i][j]); } putchar(\u0026#39;\\n\u0026#39;); } return 0; } //计算x,y周围的雷数 int scanmine(int mine[32][32], int x, int y) { int n = 0, i, j; for (i = 1; i \u0026gt; -2; i--) { for (j = 1; j \u0026gt; -2; j--) { if (mine[x + i][y + j] == 1)n++; } } return n; } //用于自动打开没有雷的区域 void chuli0(char show[31][31][4], int mine[32][32]) { int x, y, i, j; for (x = 1; x \u0026lt; row + 1; x++) { for (y = 1; y \u0026lt; col + 1; y++) { if (show[x][y][0] == \u0026#39; \u0026#39;) { for (i = 1; i \u0026gt; -2; i--) { for (j = 1; j \u0026gt; -2; j--) { if (scanmine(mine, x + i, y + j)) show[x + i][y + j][0] = \u0026#39;0\u0026#39; + scanmine(mine, x + i, y + j); else show[x + i][y + j][0] = \u0026#39; \u0026#39;; show[x + i][y + j][1] = 0; } } } } } } //计算剩余未挖开地方的数 int least(char show[31][31][4]) { int i, j, n = 0; for (i = 1; i \u0026lt; row + 1; i++) { for (j = 1; j \u0026lt; col + 1; j++) { if (!(strcmp(show[i][j], undigged)))n++; if (!(strcmp(show[i][j], marked)))n++; } } return n; } //执行游戏 int game(char show[31][31][4], int mine[32][32],int flag[31][31]){ while(getchar() != \u0026#39;\\n\u0026#39;);//清除键盘缓冲区 int i = 0, j = 0, k = 0, x, y; static int flagnum = 0; printf(\u0026#34;未挖开：%d \u0026#34;, least(show)); printf(\u0026#34;剩余雷：%d \u0026#34;, minenum - flagnum); printf(\u0026#34;已标记：%d\\n\u0026#34;, flagnum); printf(\u0026#34; \u0026#34;); for (i = 0; i \u0026lt; col; i++)printf(\u0026#34;%c \u0026#34;, i + \u0026#39;a\u0026#39;); putchar(\u0026#39;\\n\u0026#39;); output(show); puts(\u0026#34;\\n请输入操作和列号行号:(操作：d挖开,f标记/取消标记,o尝试打开四周)\u0026#34;); int opt = getchar(); y = getchar() - \u0026#39;a\u0026#39; + 1; scanf(\u0026#34;%d\u0026#34;, \u0026amp;x); //printf(\u0026#34;%d--%d\u0026#34;,x,y); if(x\u0026lt;1||x\u0026gt;row||y\u0026lt;1||y\u0026gt;row){ puts(\u0026#34;error\u0026#34;); puts(\u0026#34;\\n\\n\\n\u0026#34;); return 1;//查错语句 } switch (opt) { case \u0026#39;d\u0026#39;: if (flag[x][y]) { puts(\u0026#34;\\n\\n\u0026#34;); printf(\u0026#34;该处已被标记，请取消后重试！！！\u0026#34;); puts(\u0026#34;\\n\u0026#34;); break; } else { if (mine[x][y] \u0026amp;\u0026amp; (least(show) != col * row)) { printf(\u0026#34;你炸了！！！\u0026#34;); return 0; } if (mine[x][y] \u0026amp;\u0026amp; (least(show) == col * row)) { do { makemine(mine); }//防止第一次踩到雷 while (mine[x][y]); } if (!mine[x][y]) { if (scanmine(mine, x, y)) show[x][y][0] = \u0026#39;0\u0026#39; + scanmine(mine, x, y); else show[x][y][0] = \u0026#39; \u0026#39;; show[x][y][1] = 0; if (!(scanmine(mine, x, y))) { for (k = 0; k \u0026lt; (col \u0026gt; row ? col : row); k++)chuli0(show, mine); } puts(\u0026#34;\\n\\n\\n\u0026#34;); break; } } case \u0026#39;f\u0026#39;: flag[x][y] = !flag[x][y]; if (flag[x][y]) { strcpy(show[x][y], marked); flagnum++; } else { strcpy(show[x][y], undigged); flagnum--; } puts(\u0026#34;\\n\\n\\n\u0026#34;); break; case \u0026#39;o\u0026#39;: k = 0; for (i = 1; i \u0026gt; -2; i--) { for (j = 1; j \u0026gt; -2; j--) { if (!(strcmp(show[x + i][y + j], marked)))k++; } } if (k != scanmine(mine, x, y)) { puts(\u0026#34;\\n\\n\u0026#34;); puts(\u0026#34;无法快速打开，周围未全部标记\u0026#34;); puts(\u0026#34;\\n\u0026#34;); break; } for (i = 1; i \u0026gt; -2; i--) { for (j = 1; j \u0026gt; -2; j--) { if (!(strcmp(show[x + i][y + j], undigged))) { if (scanmine(mine, x + i, y + j)) show[x + i][y + j][0] = \u0026#39;0\u0026#39; + scanmine(mine, x + i, y + j); else show[x + i][y + j][0] = \u0026#39; \u0026#39;; show[x + i][y + j][1] = 0; if (!(scanmine(mine, x + i, y + j))) { for (k = 0; k \u0026lt; (col \u0026gt; row ? col : row); k++)chuli0(show, mine); } } } } puts(\u0026#34;\\n\\n\\n\u0026#34;); break; default: puts(\u0026#34;error\u0026#34;); puts(\u0026#34;\\n\\n\\n\u0026#34;); } if (least(show) == minenum) { printf(\u0026#34;你赢了！！！\u0026#34;); return 0; } return 1; } //选择难度 int choose(){ puts(\u0026#34;请选择难度：\u0026#34;); puts(\u0026#34;1.初级 9x9 10个雷\u0026#34;); puts(\u0026#34;2.中级 16x16 40个雷\u0026#34;); puts(\u0026#34;3.高级 16x30 99个雷\u0026#34;); puts(\u0026#34;4.自定义\u0026#34;); printf(\u0026#34;请输入序号：\u0026#34;); switch (getchar()) { case \u0026#39;1\u0026#39;: minenum = 10; row = 9; col = 9; break; case \u0026#39;2\u0026#39;: minenum = 40; row = 16; col = 16; break; case \u0026#39;3\u0026#39;: minenum = 99; row = 16; col = 30; break; case \u0026#39;4\u0026#39;: puts(\u0026#34;请输入行数：\u0026#34;); scanf(\u0026#34;%d\u0026#34;, \u0026amp;row); puts(\u0026#34;请输入列数：\u0026#34;); scanf(\u0026#34;%d\u0026#34;, \u0026amp;col); puts(\u0026#34;请输入雷数：\u0026#34;); scanf(\u0026#34;%d\u0026#34;, \u0026amp;minenum); if (row \u0026gt; 24 || col \u0026gt; 30 || minenum \u0026gt; 0.9 * col * row) { puts(\u0026#34;行数不能大于24，列数不能大于30\u0026#34;); puts(\u0026#34;雷数不能大于方格数的90%\u0026#34;); while(getchar() != \u0026#39;\\n\u0026#39;);//清除键盘缓冲区 return 1; } break; default: puts(\u0026#34;error\u0026#34;); while(getchar() != \u0026#39;\\n\u0026#39;);//清除键盘缓冲区 return 1; } return 0; } int main() { while(choose());//选择游戏难度，如果正确选择返回值应为0 int mine[32][32] = {0}, flag[31][31] = {0},i,j; makemine(mine);//造雷 putchar(\u0026#39;\\n\u0026#39;); char show[30 + 1][30 + 1][4] = {0};//用于储存雷盘显示的字符串 在macos/linux上特殊符号占用3byte for (i = 1; i \u0026lt; row + 1; i++) { for (j = 1; j \u0026lt; col + 1; j++) { strcpy(show[i][j], undigged);//初始化雷盘 } } while (game(show,mine,flag));//执行游戏 游戏结束时返回值应为0 return 0; } ","date":"2019-01-11T00:00:00Z","image":"/p/minesweeper-cli/cta_hu5d6229566403b571e354b7e8d7d45994_52875_120x120_fill_box_smart1_3.png","permalink":"/p/minesweeper-cli/","title":"扫雷 Command Line Version with C"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2000-09-09T00:00:00Z","image":"/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_120x120_fill_q75_box_smart1.jpg","permalink":"/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2000-03-11T00:00:00Z","image":"/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube Privacy Enhanced Shortcode Twitter Simple Shortcode “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019 Vimeo Simple Shortcode bilibilibi Shortcode Gist Shortcode Gitlab Snippets Shortcode Quote Shortcode Stack adds a quote shortcode. For example:\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Anonymous book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Some book Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Somebody","date":"2000-03-10T00:00:00Z","permalink":"/p/rich-content/","title":"Rich Content"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2000-03-08T00:00:00Z","permalink":"/p/math-typesetting/","title":"Math Typesetting"}]